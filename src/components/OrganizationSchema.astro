---
// HomepageSchemas.astro (revisi)
interface FAQItem { q: string; a: string }

interface Props {
  typeOverride?: 'Organization' | 'LocalBusiness'
  name?: string
  url?: string
  logo?: string
  sameAs?: string[]
  telephone?: string
  languages?: string[]
  address?: {
    streetAddress?: string
    addressLocality?: string
    addressRegion?: string
    postalCode?: string
    addressCountry?: string
  }
  openingHours?: string

  hasSearch?: boolean
  searchPath?: string

  pageName?: string
  description?: string
  ogImage?: string

  // FAQ opsional
  faqItems?: FAQItem[]
}

const {
  typeOverride = 'Organization',
  name = 'Aura Digital',
  url = 'https://auradigital.id',
  logo = 'https://auradigital.id/logo-auradigital.svg',
  sameAs = [
    'https://www.instagram.com/jasa.liketerpercaya.id',
    'https://www.tiktok.com/@indobuzz'
  ],
  telephone = '+62-895-4003-61414',
  languages = ['Indonesian', 'English'],

  address,
  openingHours,

  hasSearch = false,
  searchPath = '/search',

  pageName = 'Jasa Sosial Media â€“ Aman, Murah & Terpercaya | Aura Digital',
  description = 'Layanan buzzer & manajemen sosial media: followers, likes, views, komentar, trending topik. Aman, cepat, transparan.',
  ogImage = 'https://auradigital.id/og-home.jpg',

  faqItems = []
}: Props = Astro.props

const site = url.replace(/\/$/, '')

const graph: any[] = [
  {
    '@type': typeOverride,
    '@id': `${site}/#organization`,
    'name': name,
    'url': `${site}/`,
    'logo': {
      '@type': 'ImageObject',
      'url': logo,
      'width': 512,
      'height': 512
    },
    'sameAs': sameAs,
    'contactPoint': [{
      '@type': 'ContactPoint',
      'telephone': telephone,
      'contactType': 'customer service',
      'availableLanguage': languages
    }]
  },
  {
    '@type': 'WebSite',
    '@id': `${site}/#website`,
    'url': `${site}/`,
    'name': name,
    'publisher': { '@id': `${site}/#organization` },
    ...(hasSearch ? {
      'potentialAction': {
        '@type': 'SearchAction',
        'target': `${site}${searchPath}?q={search_term_string}`,
        'query-input': 'required name=search_term_string'
      }
    } : {})
  },
  {
    '@type': 'WebPage',
    '@id': `${site}/#webpage`,
    'url': `${site}/`,
    'name': pageName,
    'description': description,
    'isPartOf': { '@id': `${site}/#website` },
    'primaryImageOfPage': { '@type': 'ImageObject', 'url': ogImage }
  },
  {
    '@type': 'BreadcrumbList',
    '@id': `${site}/#breadcrumb`,
    'itemListElement': [{
      '@type': 'ListItem',
      'position': 1,
      'name': 'Home',
      'item': `${site}/`
    }]
  }
]

// LocalBusiness extra fields
if (typeOverride === 'LocalBusiness') {
  if (address) {
    graph[0].address = { '@type': 'PostalAddress', ...address }
  }
  if (openingHours) graph[0].openingHours = openingHours
}

// FAQ hanya jika ada item & kontennya tampil di halaman
if (faqItems.length) {
  graph.push({
    '@type': 'FAQPage',
    '@id': `${site}/#faq`,
    'mainEntity': faqItems.map((f) => ({
      '@type': 'Question',
      'name': f.q,
      'acceptedAnswer': { '@type': 'Answer', 'text': f.a }
    }))
  })
}

const jsonld = {
  '@context': 'https://schema.org',
  '@graph': graph
}
---

<script type="application/ld+json" set:html={JSON.stringify(jsonld)}></script>
