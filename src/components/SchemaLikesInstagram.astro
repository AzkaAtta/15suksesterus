---
/**
 * SchemaLikesInstagram.astro â€” FIX
 * - Hapus unitText dari Offer & OfferCatalog (tidak valid di Offer)
 * - potentialAction hanya OrderAction dengan target EntryPoint
 */
interface FAQItem { q: string; a: string }

const {
  pageUrl = 'https://auradigital.id/likes-instagram/',
  pageTitle = 'Jasa Sosial Media: Tambah Likes Instagram Aman, Murah, dan Cepat',
  description = 'Jasa tambah likes Instagram untuk Reels, Feed, dan Carousel. Suka real, aman, murah agar konten lebih dipercaya & engagement meningkat.',
  imageWebp = '/likes-instagram.webp',
  imagePng = '/likes-instagram.png',
  serviceName = 'Likes Instagram',
  serviceType = 'Social Media Likes',
  areaServed = 'ID',
  faqItems = []
} = Astro.props

const site = 'https://auradigital.id'

const graph: any[] = [
  {
    '@type': 'WebPage',
    '@id': `${pageUrl}#webpage`,
    url: pageUrl,
    name: pageTitle,
    description,
    isPartOf: { '@id': `${site}/#website` },
    primaryImageOfPage: {
      '@type': 'ImageObject',
      url: `${site}${imagePng}`,
      contentUrl: `${site}${imageWebp}`,
      encodingFormat: ['image/png', 'image/webp']
    }
  },
  {
    '@type': 'BreadcrumbList',
    '@id': `${pageUrl}#breadcrumb`,
    itemListElement: [
      { '@type': 'ListItem', position: 1, name: 'Home', item: `${site}/` },
      { '@type': 'ListItem', position: 2, name: 'Layanan', item: `${site}/layanan/` },
      { '@type': 'ListItem', position: 3, name: serviceName, item: pageUrl }
    ]
  },
  {
    '@type': 'Service',
    '@id': `${pageUrl}#service`,
    name: serviceName,
    url: pageUrl,
    description,
    serviceType,
    areaServed,
    image: {
      '@type': 'ImageObject',
      url: `${site}${imagePng}`,
      contentUrl: `${site}${imageWebp}`,
      encodingFormat: ['image/png', 'image/webp']
    },
    provider: { '@type': 'Organization', name: 'Aura Digital', url: site },
    offers: [
      {
        '@type': 'Offer',
        price: '2000',              // 2.000 per 1 like
        priceCurrency: 'IDR',
        availability: 'https://schema.org/InStock',
        url: `${pageUrl}?ref=order`
      }
    ],
    potentialAction: {
      '@type': 'OrderAction',
      target: {
        '@type': 'EntryPoint',
        urlTemplate: `${pageUrl}?ref=order`
      }
    }
  },
  {
    '@type': 'OfferCatalog',
    '@id': `${pageUrl}#catalog`,
    name: 'Paket Likes Instagram',
    url: pageUrl,
    itemListElement: [
      {
        '@type': 'Offer',
        name: '100 Likes Instagram',
        price: '200000',
        priceCurrency: 'IDR',
        url: `${pageUrl}?ref=order&paket=100`
      },
      {
        '@type': 'Offer',
        name: '500 Likes Instagram',
        price: '1000000',
        priceCurrency: 'IDR',
        url: `${pageUrl}?ref=order&paket=500`
      },
      {
        '@type': 'Offer',
        name: '1000 Likes Instagram',
        price: '2000000',
        priceCurrency: 'IDR',
        url: `${pageUrl}?ref=order&paket=1000`
      }
    ]
  }
]

if (faqItems.length) {
  graph.push({
    '@type': 'FAQPage',
    '@id': `${pageUrl}#faq`,
    mainEntity: faqItems.map(f => ({
      '@type': 'Question',
      name: f.q,
      acceptedAnswer: { '@type': 'Answer', text: f.a }
    }))
  })
}

const jsonld = { '@context': 'https://schema.org', '@graph': graph }
---

<script type="application/ld+json" set:html={JSON.stringify(jsonld)}></script>
