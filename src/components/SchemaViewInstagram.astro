---
/**
 * Schema untuk halaman /views-instagram/ (root-relative URLs)
 * Termasuk: WebPage + BreadcrumbList + Service(+Offer) + FAQPage (opsional)
 */

interface Offer {
  price: string;
  priceCurrency?: string;
  unitText?: string;
  url?: string;
  availability?: string;
}
interface FaqItem { q: string; a: string; }

interface Props {
  // Halaman
  pageUrl?: string;              // default: /views-instagram/
  pageTitle?: string;
  description?: string;

  // Gambar
  imageWebp?: string;            // default: /views-instagram.webp
  imagePng?: string;             // default: /views-instagram.png

  // Service
  serviceName?: string;          // default: Views Instagram
  serviceUrl?: string;           // default: /views-instagram/
  serviceType?: string;          // default: Video Views
  areaServed?: string;           // default: ID
  offers?: Offer[];              // default contoh di bawah

  // FAQ (opsional)
  faqItems?: FaqItem[];          // jika kosong, FAQPage tidak dioutput
}

const {
  pageUrl = '/views-instagram/',
  pageTitle = 'Views Instagram Aman & Stabil â€” Aura Digital',
  description = 'Tambahkan views untuk Reels/Feed secara aman & bertahap. Optimasi sinyal algoritma dan jangkauan konten.',

  imageWebp = '/views-instagram.webp',
  imagePng = '/views-instagram.png',

  serviceName = 'Views Instagram',
  serviceUrl = '/views-instagram/',
  serviceType = 'Video Views',
  areaServed = 'ID',
  offers = [
    { price: '150000', priceCurrency: 'IDR', unitText: 'per 1000', url: '/views-instagram/?ref=order', availability: 'https://schema.org/InStock' }
  ],

  faqItems = [],
}: Props = Astro.props;

// Graph dasar
const graph: any[] = [
  {
    '@type': 'WebPage',
    '@id': `${pageUrl}#webpage`,
    url: pageUrl,
    name: pageTitle,
    description,
    primaryImageOfPage: {
      '@type': 'ImageObject',
      url: imagePng,
      contentUrl: imageWebp,
      encodingFormat: ['image/png', 'image/webp'],
    },
    isPartOf: { '@id': '/#website' } // refer ke WebSite global (bisa kamu output di layout/homepage)
  },
  {
    '@type': 'BreadcrumbList',
    '@id': `${pageUrl}#breadcrumb`,
    itemListElement: [
      { '@type': 'ListItem', position: 1, name: 'Home', item: '/' },
      { '@type': 'ListItem', position: 2, name: 'Layanan', item: '/layanan/' },
      { '@type': 'ListItem', position: 3, name: serviceName, item: pageUrl },
    ],
  },
  {
    '@type': 'Service',
    '@id': `${serviceUrl}#service`,
    name: serviceName,
    url: serviceUrl,
    description,
    serviceType,
    areaServed,
    image: {
      '@type': 'ImageObject',
      url: imagePng,
      contentUrl: imageWebp,
      encodingFormat: ['image/png', 'image/webp'],
    },
    provider: { '@type': 'Organization', name: 'Aura Digital', url: '/' },
    offers: offers.map(o => ({
      '@type': 'Offer',
      price: o.price,
      priceCurrency: o.priceCurrency ?? 'IDR',
      unitText: o.unitText ?? 'per 1000',
      url: o.url ?? serviceUrl,
      availability: o.availability ?? 'https://schema.org/InStock',
    })),
    potentialAction: [
      { '@type': 'OrderAction', target: `${serviceUrl}?ref=order` },
      { '@type': 'ContactAction', target: '/kontak/' },
    ],
  },
];

// Tambahkan FAQPage kalau ada data FAQ
if (faqItems.length > 0) {
  graph.push({
    '@type': 'FAQPage',
    '@id': `${pageUrl}#faq`,
    mainEntity: faqItems.map(item => ({
      '@type': 'Question',
      name: item.q,
      acceptedAnswer: { '@type': 'Answer', text: item.a }
    }))
  });
}
---

<script type="application/ld+json">
  {JSON.stringify({ '@context': 'https://schema.org', '@graph': graph })}
</script>
